= render 'shared/error_alert', model: article
.mt-4
  = form_with(model: article, class: "shadow p-3 mb-5 bg-light-blue rounded", local: true) do |f|
    - invalid = article.errors.include?(:title)
    .form-group.row.mt-3
      = f.label :title, class: 'col-md-2 col-sm-3 col-form-label fw-bolder', for: 'title'
      .col-md-10.col-sm-9
        = f.text_field :title, class: [('form-control shadow-sm rounded'), ('is-invalid' if invalid)], id: 'title', placeholder: 'Title of your article'
        .invalid-feedback.d-block
          .ul
            - article.errors.full_messages_for(:title).each do |error_message|
              .li= error_message
    - invalid = article.errors.include?(:description)
    .form-group.row.mt-3
      = f.label :description, class: 'col-md-2 col-sm-3 col-form-label fw-bolder', for: 'description'
      .col-md-10.col-sm-9
        = f.text_area :description, class: [('form-control shadow-sm rounded'), ('is-invalid' if invalid)], id: 'description', placeholder: 'Short description of your article', rows: 2
        .invalid-feedback.d-block
          .ul
            - article.errors.full_messages_for(:description).each do |error_message|
              .li= error_message
    - invalid = article.errors.include?(:content)
    .form-group.row.mt-3
      = f.label :content, class: 'col-md-2 col-sm-3 col-form-label fw-bolder', for: 'content'
      .col-md-10.col-sm-9
        = f.text_area :content, class: [('form-control shadow-sm rounded'), ('is-invalid' if invalid)], id: 'content', placeholder: 'Content of your article (may contain markdown syntax)', rows: 8
        .invalid-feedback.d-block
          .ul
            - article.errors.full_messages_for(:content).each do |error_message|
              .li= error_message
    - invalid = article.errors.include?(:category_ids)
    .form-group.row.mt-3
      = f.label 'Categories', class: 'col-md-2 col-sm-3 col-form-label fw-bolder', for: 'category'
      .col-md-10.col-sm-9
        = f.collection_select(:category_ids, Category.order(name: :asc), :id, :name, { }, { multiple: true, size: 4, class: 'form-select shadow-sm rounded' })
        .invalid-feedback.d-block
          .ul
            - article.errors.full_messages_for(:category_ids).each do |error_message|
              .li= error_message
    .form-group.row.mt-3.justify-content-end
      .col-auto
        - submit_label_name = article.persisted? ? 'Update article' : 'Create article'
        = f.submit submit_label_name, class: "btn btn-outline-success btn-lg"
       
    